#!/bin/bash

#  ---------------------------------------------------------------------------
#
#  Description:  This file holds all my BASH configurations and aliases
#
#  Sections:
#  1.   Environment Configuration
#  2.   Make Terminal Better (remapping defaults and adding functionality)
#  3.   File and Folder Management
#  4.   Searching
#  5.   Process Management
#  6.   Networking
#  7.   System Operations & Information
#  8.   Web Development
#  9.   Reminders & Notes
#
#  ---------------------------------------------------------------------------

#   -------------------------------
#   1.  ENVIRONMENT CONFIGURATION
#   -------------------------------

#   Change Prompt
#   ------------------------------------------------------------
RED="\[\033[0;31m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
YELLOW="\[\033[0;33m\]"
BLACK="\[\033[0;30m\]"
DARK_GRAY="\[\033[1;30m\]"
PS_CLEAR="\[\033[0m\]"
SCREEN_ESC="\[\033k\033\134\]"

# Setting some escaped characters
CHAR_CHECKMARK=$'\xE2\x9C\x93'
CHAR_XMARK=$'\xE2\x9C\x97'

if [ "$LOGNAME" = "root" ]; then
    COLOR1="${RED}"
    COLOR2="${BLUE}"
    P="#"
else
    COLOR1="${BLUE}"
    COLOR2="${BLUE}"
    P="=>"
fi

prompt_simple() {
    unset PROMPT_COMMAND
    PS1="[\u@\h:\w]\$ "
    PS2=""
}

prompt_compact() {
    unset PROMPT_COMMAND
    PS1="${COLOR1}${P}${PS_CLEAR} "
    PS2=""
}

prompt_color() {
	unset PROMPT_COMMAND
    PS1="${DARK_GRAY} ________________________________________________________________________________\n| \w @ \h (\u)${PS_CLEAR}"
    PS1+="\n| $P${PS_CLEAR} "
    PS2=""
}

# override and disable tilde expansion
_expand() {
    return 0
}

# Use the color prompt by default when interactive
if [[ `uname` == "Darwin" ]]; then
    test -n "$PS1" && prompt_color
else
    test -n "$PS1" && prompt_simple
fi


#   Set Paths
#   ------------------------------------------------------------
export PATH="$PATH:/usr/local/bin/"
export PATH="/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:$PATH"

#   Set Default Editor (change 'Nano' to the editor of your choice)
#   ------------------------------------------------------------
export EDITOR=/usr/bin/nano

#   Set default blocksize for ls, df, du
#   from this: http://hints.macworld.com/comment.php?mode=view&cid=24491
#   ------------------------------------------------------------
export BLOCKSIZE=1k

#   Add color to terminal
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

#   Shell opts. see bash(1) for details
shopt -s extglob >/dev/null 2>&1
shopt -s histappend >/dev/null 2>&1
shopt -s hostcomplete >/dev/null 2>&1
shopt -s interactive_comments >/dev/null 2>&1
shopt -u mailwarn >/dev/null 2>&1
shopt -s no_empty_cmd_completion >/dev/null 2>&1

#   Detect interactive shell
case "$-" in
    *i*) INTERACTIVE=yes ;;
    *)   unset INTERACTIVE ;;
esac

#   Detect login shell
case "$0" in
    -*) LOGIN=yes ;;
    *)  unset LOGIN ;;
esac

#   Enable en_US locale w/ utf-8 encodings if not already configured
: ${LANG:="en_US.UTF-8"}
: ${LANGUAGE:="en"}
: ${LC_CTYPE:="en_US.UTF-8"}
: ${LC_ALL:="en_US.UTF-8"}
export LANG LANGUAGE LC_CTYPE LC_ALL

HISTCONTROL=erasedups



#   -----------------------------
#   2.  MAKE TERMINAL BETTER
#   -----------------------------
alias cp='cp -iv'                                                   # Preferred 'cp' implementation
alias mv='mv -iv'                                                   # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                                             # Preferred 'mkdir' implementation
alias ll='ls -FGlAhp'                                               # Preferred 'ls' implementation
alias less='less -FSRXc'                                            # Preferred 'less' implementation
cd() { builtin cd "$@"; ll; }                                       # Always list directory contents upon 'cd'
alias cd..='cd ../'                                                 # Go back 1 directory level (for fast typers)
alias ..='cd ../'                                                   # Go back 1 directory level
alias ...='cd ../../'                                               # Go back 2 directory levels
alias .3='cd ../../../'                                             # Go back 3 directory levels
alias .4='cd ../../../../'                                          # Go back 4 directory levels
alias .5='cd ../../../../../'                                       # Go back 5 directory levels
alias .6='cd ../../../../../../'                                    # Go back 6 directory levels
alias edit='subl'                                                   # edit:         Opens any file in sublime editor
alias f='open -a Finder ./'                                         # f:            Opens current directory in MacOS Finder
alias ~="cd ~"                                                      # ~:            Go Home
alias c='clear'                                                     # c:            Clear terminal display
alias which='type -all'                                             # which:        Find executables
alias path='echo -e ${PATH//:/\\n}'                                 # path:         Echo all executable Paths
alias show_options='shopt'                                          # Show_options: display bash options settings
alias fix_stty='stty sane'                                          # fix_stty:     Restore terminal settings when screwed up
alias cic='set completion-ignore-case On'                           # cic:          Make tab-completion case-insensitive
mcd () { mkdir -p "$1" && cd "$1"; }                                # mcd:          Makes new Dir and jumps inside
trash () { command mv "$@" ~/.Trash ; }                             # trash:        Moves a file to the MacOS trash
ql () { qlmanage -p "$*" >& /dev/null; }                            # ql:           Opens any file in MacOS Quicklook Preview
alias DT='tee ~/Desktop/terminalOut.txt'                            # DT:           Pipe content to file on MacOS Desktop
alias lsd='ll | grep "^d"'                                          # Preferred 'ls' implementation (only directories)
alias battery='ioreg -w0 -l | grep Capacity | cut -d " " -f 17-50'  # display battery info

#   lr:  Full Recursive Directory Listing
#   ------------------------------------------
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

#   mans:   Search manpage given in agument '1' for term given in argument '2' (case insensitive)
#           displays paginated result with colored search terms and two lines surrounding each hit.             Example: mans mplayer codec
#   --------------------------------------------------------------------
mans () {
    man $1 | grep -iC2 --color=always $2 | less
}

#   showa: to remind yourself of an alias (given some part of it)
#   ------------------------------------------------------------
showa () { /usr/bin/grep --color=always -i -a1 $@ ~/Library/init/bash/aliases.bash | grep -v '^\s*$' | less -FSRXc ; }

# Refresh shell
alias reload='source ~/.bash_profile'

# Outputs date and time on the top right corner of shell/ terminal.
alias datetime='while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done &'

#   -------------------------------
#   3.  FILE AND FOLDER MANAGEMENT
#   -------------------------------

zipf () { zip -r "$1".zip "$1" ; }                                  # zipf:         To create a ZIP archive of a folder
alias numFiles='echo $(ls -1 | wc -l)'                              # numFiles:     Count of non-hidden files in current dir
alias make1mb='mkfile 1m ./1MB.dat'                                 # make1mb:      Creates a file of 1mb size (all zeros)
alias make5mb='mkfile 5m ./5MB.dat'                                 # make5mb:      Creates a file of 5mb size (all zeros)
alias make10mb='mkfile 10m ./10MB.dat'                              # make10mb:     Creates a file of 10mb size (all zeros)


disks () {
df -h | grep -vE '^Filesystem|devfs|map|tmpfs|cdrom' | awk '{ print $5 " " $1 }' | while read output;
do
  consumed=$(echo $output | awk '{ print $1}' | cut -d'%' -f1  )
  partition=$(echo $output | awk '{ print $2 }' )
  if [ $consumed -ge 95 ]; then
    echo "[$(tput setaf 1)${CHAR_XMARK}$(tput sgr0)]  Running out of disk space on \"$partition [$consumed% consumed]\" on $(hostname)"
  else
    echo "[$(tput setaf 2)${CHAR_CHECKMARK}$(tput sgr0)]  $consumed% consumed on $partition @ $(hostname)"
  fi
done
}

#   cdf:  'Cd's to frontmost window of MacOS Finder
#   ------------------------------------------------------
    cdf () {
        currFolderPath=$( /usr/bin/osascript <<EOT
            tell application "Finder"
                try
            set currFolder to (folder of the front window as alias)
                on error
            set currFolder to (path to desktop folder as alias)
                end try
                POSIX path of currFolder
            end tell
EOT
        )
        echo "cd to \"$currFolderPath\""
        cd "$currFolderPath"
    }

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }


#   ---------------------------
#   4.  SEARCHING
#   ---------------------------
alias qfind="find . -name "                                         # Quickly search for file
ff () { /usr/bin/find . -name "$@" ; }                              # Find file under the current directory
ffs () { /usr/bin/find . -name "$@"'*' ; }                          # Find file whose name starts with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }                          # Find file whose name ends with a given string
spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }             # spotlight: Search for a file using MacOS Spotlight's metadata
alias h='history'                                                   # Shortcut for history
hist() { history | grep $1; }                                       # Find a command in the history, e.g hist man

#   ---------------------------
#   5.  PROCESS MANAGEMENT
#   ---------------------------

#   findPid: find out the pid of a specified process
#   -----------------------------------------------------
#       Note that the command name can be specified via a regex
#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
#       Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
findPid () { lsof -t -c "$@" ; }

#   memHogsTop, memHogsPs:  Find memory hogs
#   -----------------------------------------------------
alias memHogsTop='top -l 1 -o rsize | head -20'
alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'

#   cpuHogs:  Find CPU hogs
#   -----------------------------------------------------
alias cpuHogsPs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

#   topForever:  Continual 'top' listing (every 10 seconds)
#   -----------------------------------------------------
alias topForever='top -l 9999999 -s 10 -o cpu'

#   ttop:  Recommended 'top' invocation to minimize resources
#   ------------------------------------------------------------
#       Taken from this macosxhints article
#       http://www.macosxhints.com/article.php?story=20060816123853639
#   ------------------------------------------------------------
alias ttop="top -R -F -s 10 -o rsize"

#   my_ps: List processes owned by my user:
#   ------------------------------------------------------------
my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }

# grep for a process
psg () {
  FIRST=`echo $1 | sed -e 's/^\(.\).*/\1/'`
  REST=`echo $1 | sed -e 's/^.\(.*\)/\1/'`
  ps aux | grep "[$FIRST]$REST"
}

#   ---------------------------
#   6.  NETWORKING
#   ---------------------------
alias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address
alias wanip="dig +short myip.opendns.com @resolver1.opendns.com"
alias whois="whois -h whois-servers.net"

alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\"" #View HTTP traffic
alias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs

#   ii:  display useful host related informaton
#   -------------------------------------------------------------------
ii() {
    echo -e "$(tput setaf 5)You are logged on:$(tput sgr0) " ; echo $(hostname | sed -e 's/\..*//')
    echo -e "$(tput setaf 5)Additionnal information:$(tput sgr0) " ; uname -a
    echo -e "$(tput setaf 5)Users logged on:$(tput sgr0) " ; w -h
    echo -e "$(tput setaf 5)Current date :$(tput sgr0) " ; date
    echo -e "$(tput setaf 5)Machine stats :$(tput sgr0) " ; uptime
    echo -e "$(tput setaf 5)Current network location :$(tput sgr0) " ; scselect
    echo -e "$(tput setaf 5)Public facing IP Address :$(tput sgr0) " ; myip ; echo ""
    echo -e "$(tput setaf 5)Geographical information :$(tput sgr0) " ; curl ipinfo.io
    #echo -e "\n${RED}DNS Configuration:$PS_CLEAR " ; scutil --dns
    echo
}


#   ---------------------------------------
#   7.  SYSTEMS OPERATIONS & INFORMATION
#   ---------------------------------------
alias mountReadWrite='/sbin/mount -uw /'    # mountReadWrite:   For use when booted into single-user

#   cleanupDS:  Recursively delete .DS_Store files
#   -------------------------------------------------------------------
    alias cleanupDS="find . -type f -name '*.DS_Store' -ls -delete"

#   finderShowHidden:   Show hidden files in Finder
#   finderHideHidden:   Hide hidden files in Finder
#   -------------------------------------------------------------------
    alias finderShowHidden='defaults write com.apple.finder ShowAllFiles TRUE'
    alias finderHideHidden='defaults write com.apple.finder ShowAllFiles FALSE'

#   cleanupLS:  Clean up LaunchServices to remove duplicates in the "Open With" menu
#   -----------------------------------------------------------------------------------
    alias cleanupLS="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

#    screensaverDesktop: Run a screensaver on the Desktop
#   -----------------------------------------------------------------------------------
    alias screensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'

#   ---------------------------------------
#   8.  WEB DEVELOPMENT
#   ---------------------------------------

    alias apacheEdit='sudo edit /etc/httpd/httpd.conf'      # apacheEdit:       Edit httpd.conf
    alias apacheRestart='sudo apachectl graceful'           # apacheRestart:    Restart Apache
    alias editHosts='sudo edit /etc/hosts'                  # editHosts:        Edit /etc/hosts file
    alias herr='tail /var/log/httpd/error_log'              # herr:             Tails HTTP error logs
    alias apacheLogs="less +F /var/log/apache2/error_log"   # Apachelogs:   Shows apache error logs
    httpHeaders () { /usr/bin/curl -I -L $@ ; }             # httpHeaders:      Grabs headers from web page

#   httpDebug:  Download a web page and show info on what took time
#   -------------------------------------------------------------------
    httpDebug () { /usr/bin/curl $@ -o /dev/null -w "dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\n" ; }


#   ---------------------------------------
#   9.  REMINDERS & NOTES
#   ---------------------------------------

#   remove_disk: spin down unneeded disk
#   ---------------------------------------
#   diskutil eject /dev/disk1s3

#   to change the password on an encrypted disk image:
#   ---------------------------------------
#   hdiutil chpass /path/to/the/diskimage

#   to mount a read-only disk image as read-write:
#   ---------------------------------------
#   hdiutil attach example.dmg -shadow /tmp/example.shadow -noverify

#   mounting a removable drive (of type msdos or hfs)
#   ---------------------------------------
#   mkdir /Volumes/Foo
#   ls /dev/disk*   to find out the device to use in the mount command)
#   mount -t msdos /dev/disk1s1 /Volumes/Foo
#   mount -t hfs /dev/disk1s1 /Volumes/Foo

#   to create a file of a given size: /usr/sbin/mkfile or /usr/bin/hdiutil
#   ---------------------------------------
#   e.g.: mkfile 10m 10MB.dat
#   e.g.: hdiutil create -size 10m 10MB.dmg
#   the above create files that are almost all zeros - if random bytes are desired
#   then use: ~/Dev/Perl/randBytes 1048576 > 10MB.dat
